name: Build Signed Release APK

on:
#  push:
#    branches: [ release/** ] # Or your primary branch, e.g., master

  pull_request:
    branches: [ release/** ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Decode the keystore from the secret and create the file
      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo $KEYSTORE_BASE64 | base64 --decode > ${GITHUB_WORKSPACE}/release.jks

      - name: Decode Firebase Config
        env:
          FIREBASESECRET: ${{ secrets.FIREBASESECRET }}
        run:
          echo "$FIREBASESECRET" | base64 --decode > ./app/google-services.json

      # 4. Build the signed APK
      - name: Build with Gradle
        env:
          SIGNING_STORE_FILE: ${GITHUB_WORKSPACE}/release.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      # 5. Upload the APK as a build artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: warnastrophy-release
          path: app/build/outputs/apk/release/warnastrophy-release-signed.apk
